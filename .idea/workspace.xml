<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="16a3eaa1-2fa8-4b89-97b3-f35e77d1266b" name="Changes" comment="Messing with adding Gradle to this project to manage the Mongo packages" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager" show_ignored="true" />
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="Movie-Store" type="f1a62948:ProjectNode" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;jasonhamel&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/jasonhamel/Movie-Store.git&quot;,
    &quot;accountId&quot;: &quot;217d01da-2dee-4a6c-ac6d-a0b378e40834&quot;
  }
}</component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="MavenRunner">
    <option name="environmentProperties">
      <map>
        <entry key="dbkey" value="W98ZYGXvqjqBiQLI" />
      </map>
    </option>
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2EpDcJCH1Kkfac7BWCy03YX0QA8" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Application.DataConnection.executor&quot;: &quot;Debug&quot;,
    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
    &quot;Application.QuickStart.executor&quot;: &quot;Run&quot;,
    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,
    &quot;Gradle.Build Movie-Store.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Movie-Store [:main.Main.main()].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.Movie-Store [test].executor&quot;: &quot;Run&quot;,
    &quot;JUnit.test in untitled.executor&quot;: &quot;Run&quot;,
    &quot;JUnit.testTransaction.executor&quot;: &quot;Run&quot;,
    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,
    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,
    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;extract.method.default.visibility&quot;: &quot;private&quot;,
    &quot;git-widget-placeholder&quot;: &quot;mongoIntegration&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/Jason/OneDrive/Documents/Coding/Movie-Store/src/main&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Global Libraries&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;configurable.group.build&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Jason Hamel\Documents\Coding\Movie Store\Movie Store" />
    </key>
  </component>
  <component name="RunManager" selected="Application.Main">
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="ALTERNATIVE_JRE_PATH" value="18" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="true" />
      <envs>
        <env name="DB_KEY" value="YIdD2qPjWFf2QoMR" />
      </envs>
      <option name="MAIN_CLASS_NAME" value="main.Main" />
      <module name="Movie-Store.main" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="main.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Movie-Store [test]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="test" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="test in untitled" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="untitled" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="test.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="test" />
      <option name="TEST_OBJECT" value="package" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="testEmployee.testPunchIn" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="untitled" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="test.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="test" />
      <option name="MAIN_CLASS_NAME" value="test.testEmployee" />
      <option name="METHOD_NAME" value="testPunchIn" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="testTransaction.testGetTransaction" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="untitled" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="test.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="test" />
      <option name="MAIN_CLASS_NAME" value="test.testTransaction" />
      <option name="METHOD_NAME" value="testGetTransaction" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.Main" />
      <item itemvalue="Gradle.Movie-Store [test]" />
      <item itemvalue="JUnit.test in untitled" />
      <item itemvalue="JUnit.testEmployee.testPunchIn" />
      <item itemvalue="JUnit.testTransaction.testGetTransaction" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Application.Main" />
        <item itemvalue="Gradle.Movie-Store [test]" />
        <item itemvalue="JUnit.testTransaction.testGetTransaction" />
        <item itemvalue="JUnit.testEmployee.testPunchIn" />
        <item itemvalue="JUnit.test in untitled" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="16a3eaa1-2fa8-4b89-97b3-f35e77d1266b" name="Changes" comment="" />
      <created>1663283710282</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1663283710282</updated>
    </task>
    <task id="LOCAL-00001" summary="Initial commit with starting of requirements.txt made">
      <created>1663532798604</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1663532798604</updated>
    </task>
    <task id="LOCAL-00002" summary="Began work on Movie class and completed requirements.txt">
      <created>1663544815577</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1663544815577</updated>
    </task>
    <task id="LOCAL-00003" summary="Created the DVD class and overrode the discount method from the Discount class">
      <created>1663720611708</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1663720611708</updated>
    </task>
    <task id="LOCAL-00004" summary="Created the HDDVD class and overrode the discount method from the Discount class. Lol @ the implementation of the discount method in both DVD and HDDVD. Will need to circle back to that">
      <created>1663722223578</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1663722223578</updated>
    </task>
    <task id="LOCAL-00005" summary="Reworked the Movie class to better implement the required discounts. Removed the Discounts class entirely.">
      <created>1664132003843</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1664132003843</updated>
    </task>
    <task id="LOCAL-00006" summary="Wrote my first Singleton with the Store class. Stole the advanced multi-threading ideas from YouTube. I'm sure I'll multi-thread some day, but not in this project :)">
      <created>1664321422029</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1664321422029</updated>
    </task>
    <task id="LOCAL-00007" summary="Wrote the Bluray class and Employee class. Imported Junit and completed a test to make sure its setup correctly.">
      <created>1664497824861</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1664497824861</updated>
    </task>
    <task id="LOCAL-00008" summary="Wrote the Bluray class and Employee class. Imported Junit and completed a test to make sure its setup correctly.">
      <created>1664497853817</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1664497853817</updated>
    </task>
    <task id="LOCAL-00009" summary="Made testBluray, testDVD, and test HDDVD classes and made generic tests. Added a bug to requirements.txt">
      <created>1664648128400</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1664648128400</updated>
    </task>
    <task id="LOCAL-00010" summary="Made testStore.java and tested the adding/removing of movies to the store">
      <created>1665415179935</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1665415179935</updated>
    </task>
    <task id="LOCAL-00011" summary="Made testEmployee.java and tested the adding employees and changing punched in status">
      <created>1665871833374</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1665871833374</updated>
    </task>
    <task id="LOCAL-00012" summary="Built renting functionality into Movie.class">
      <created>1665887500920</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1665887500920</updated>
    </task>
    <task id="LOCAL-00013" summary="Started building the Transaction.java class to allow the sales summary at the end of each day">
      <created>1666053710670</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1666053710670</updated>
    </task>
    <task id="LOCAL-00014" summary="Updated the Transaction.java class to generate its own random transaction id. In practise this would likely be an incremented long, but wanted to play with ThreadLocalRandom">
      <created>1666316333247</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1666316333247</updated>
    </task>
    <task id="LOCAL-00015" summary="Started fiddling with a MySQl connection and learning persistence. Can successfully add a transaction to the database">
      <created>1667169333175</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1667169333175</updated>
    </task>
    <task id="LOCAL-00016" summary="Did some cleanup and made things look a little prettier">
      <created>1667172025559</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1667172025559</updated>
    </task>
    <task id="LOCAL-00017" summary="Deleted some SQL code and testing a push to this branch">
      <option name="closed" value="true" />
      <created>1729298102956</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1729298102956</updated>
    </task>
    <task id="LOCAL-00018" summary="Add the mongo package using Maven, build the QuickStart.java Class to test">
      <option name="closed" value="true" />
      <created>1729444847330</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1729444847330</updated>
    </task>
    <task id="LOCAL-00019" summary="Adds the ability to read text from a file. This text will be comma-delimited and used to load the initial movie inventory for the set">
      <option name="closed" value="true" />
      <created>1730048694630</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1730048694630</updated>
    </task>
    <task id="LOCAL-00020" summary="Add logic to get a list of 10 movies loaded into the database if there are no movies in the database">
      <option name="closed" value="true" />
      <created>1730665178997</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1730665178997</updated>
    </task>
    <task id="LOCAL-00021" summary="Remove the key from the code and update to using env variables.">
      <option name="closed" value="true" />
      <created>1730834955158</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1730834955158</updated>
    </task>
    <task id="LOCAL-00022" summary="Move from the QuickStart.java class to the DataConnection.java class.">
      <option name="closed" value="true" />
      <created>1730918216689</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1730918216689</updated>
    </task>
    <task id="LOCAL-00023" summary="Delete QuickStart.java class">
      <option name="closed" value="true" />
      <created>1730918257294</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1730918257294</updated>
    </task>
    <task id="LOCAL-00024" summary="Retrieve a movie based on multiple conditions. Only works with DVDs.">
      <option name="closed" value="true" />
      <created>1731253270009</created>
      <option name="number" value="00024" />
      <option name="presentableId" value="LOCAL-00024" />
      <option name="project" value="LOCAL" />
      <updated>1731253270009</updated>
    </task>
    <task id="LOCAL-00025" summary="Remove the three getDocument methods for each movie type and replace them with a single method using generics. Only make one write request to the database.&#10;&#10;Change the results of the null-check condition. If the data contains information at first run, the table is dropped and then the data is created and pushed each time the application runs. This is only for testing and obviously awful to put into a prod situation">
      <option name="closed" value="true" />
      <created>1731783837194</created>
      <option name="number" value="00025" />
      <option name="presentableId" value="LOCAL-00025" />
      <option name="project" value="LOCAL" />
      <updated>1731783837194</updated>
    </task>
    <task id="LOCAL-00026" summary="Remove the three scan methods for the media types and replaced them with the scanFile method. That list is then iterated over to create the movies for each type of media.">
      <option name="closed" value="true" />
      <created>1731894988552</created>
      <option name="number" value="00026" />
      <option name="presentableId" value="LOCAL-00026" />
      <option name="project" value="LOCAL" />
      <updated>1731894988552</updated>
    </task>
    <task id="LOCAL-00027" summary="Reworked the database commit from 4 loops to one">
      <option name="closed" value="true" />
      <created>1733685274919</created>
      <option name="number" value="00027" />
      <option name="presentableId" value="LOCAL-00027" />
      <option name="project" value="LOCAL" />
      <updated>1733685274919</updated>
    </task>
    <task id="LOCAL-00028" summary="Messing with adding Gradle to this project to manage the Mongo packages">
      <option name="closed" value="true" />
      <created>1734884878572</created>
      <option name="number" value="00028" />
      <option name="presentableId" value="LOCAL-00028" />
      <option name="project" value="LOCAL" />
      <updated>1734884878572</updated>
    </task>
    <option name="localTasksCounter" value="29" />
    <servers />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="requirements.txt" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="mongoIntegration" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Created the DVD class and overrode the discount method from the Discount class" />
    <MESSAGE value="Created the HDDVD class and overrode the discount method from the Discount class. Lol @ the implementation of the discount method in both DVD and HDDVD. Will need to circle back to that" />
    <MESSAGE value="Reworked the Movie class to better implement the required discounts. Removed the Discounts class entirely." />
    <MESSAGE value="Wrote my first Singleton with the Store class. Stole the advanced multi-threading ideas from YouTube. I'm sure I'll multi-thread some day, but not in this project :)" />
    <MESSAGE value="Wrote the Bluray class and Employee class. Imported Junit and completed a test to make sure its setup correctly." />
    <MESSAGE value="Made testBluray, testDVD, and test HDDVD classes and made generic tests. Added a bug to requirements.txt" />
    <MESSAGE value="Made testStore.java and tested the adding/removing of movies to the store" />
    <MESSAGE value="Made testEmployee.java and tested the adding employees and changing punched in status" />
    <MESSAGE value="Built renting functionality into Movie.class" />
    <MESSAGE value="Started building the Transaction.java class to allow the sales summary at the end of each day" />
    <MESSAGE value="Updated the Transaction.java class to generate its own random transaction id. In practise this would likely be an incremented long, but wanted to play with ThreadLocalRandom" />
    <MESSAGE value="Started fiddling with a MySQl connection and learning persistence. Can successfully add a transaction to the database" />
    <MESSAGE value="Did some cleanup and made things look a little prettier" />
    <MESSAGE value="Deleted some SQL code and testing a push to this branch" />
    <MESSAGE value="Add the mongo package using Maven, build the QuickStart.java Class to test" />
    <MESSAGE value="Adds the ability to read text from a file. This text will be comma-delimited and used to load the initial movie inventory for the set" />
    <MESSAGE value="Add logic to get a list of 10 movies loaded into the database if there are no movies in the database" />
    <MESSAGE value="Remove the key from the code and update to using env variables." />
    <MESSAGE value="Move from the QuickStart.java class to the DataConnection.java class." />
    <MESSAGE value="Delete QuickStart.java class" />
    <MESSAGE value="Retrieve a movie based on multiple conditions. Only works with DVDs." />
    <MESSAGE value="Remove the three getDocument methods for each movie type and replace them with a single method using generics. Only make one write request to the database.&#10;&#10;Change the results of the null-check condition. If the data contains information at first run, the table is dropped and then the data is created and pushed each time the application runs. This is only for testing and obviously awful to put into a prod situation" />
    <MESSAGE value="Remove the three scan methods for the media types and replaced them with the scanFile method. That list is then iterated over to create the movies for each type of media." />
    <MESSAGE value="Reworked the database commit from 4 loops to one" />
    <MESSAGE value="Messing with adding Gradle to this project to manage the Mongo packages" />
    <option name="LAST_COMMIT_MESSAGE" value="Messing with adding Gradle to this project to manage the Mongo packages" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <breakpoint enabled="true" type="java-exception">
          <properties class="java.util.InputMismatchException" package="java.util" />
          <option name="timeStamp" value="7" />
        </breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>